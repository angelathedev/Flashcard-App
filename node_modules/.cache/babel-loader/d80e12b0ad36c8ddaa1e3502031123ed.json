{"ast":null,"code":"var _jsxFileName = \"/Users/ladybyrd/Thinkful/flashcard-project/Project_Flashcards_Qualified_1/src/Decks/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    id: 0,\n    name: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    async function loadDecks() {\n      const currentDeck = await readDeck(deckId);\n      setDeck(currentDeck);\n    }\n\n    loadDecks();\n  }, [deckId]);\n\n  function handleSubmission(e) {\n    e.preventDefault();\n    updateDeck(deck).then(index => history.push(`/decks/${index.id}`));\n  }\n\n  function updateName(e) {\n    setDeck({ ...deck,\n      name: e.target.value\n    });\n  }\n\n  function updateDescription(e) {\n    setDeck({ ...deck,\n      description: e.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckForm, {\n      handleFunction: handleSubmission,\n      deck: deck,\n      updateName: updateName,\n      updateDescription: updateDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"4fIFvtlhkZjVrs+wzfoivmiY8lk=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/ladybyrd/Thinkful/flashcard-project/Project_Flashcards_Qualified_1/src/Decks/EditDeck.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","DeckForm","readDeck","updateDeck","EditDeck","history","deckId","deck","setDeck","id","name","description","loadDecks","currentDeck","handleSubmission","e","preventDefault","then","index","push","updateName","target","value","updateDescription"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACnB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC;AAC/BY,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,WAAW,EAAE;AAHkB,GAAD,CAAlC;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,SAAf,GAA0B;AACtB,YAAMC,WAAW,GAAG,MAAMX,QAAQ,CAACI,MAAD,CAAlC;AACAE,MAAAA,OAAO,CAACK,WAAD,CAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACN,MAAD,CANM,CAAT;;AAQA,WAASQ,gBAAT,CAA0BC,CAA1B,EAA4B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,UAAU,CAACI,IAAD,CAAV,CACHU,IADG,CACGC,KAAD,IAAWb,OAAO,CAACc,IAAR,CAAc,UAASD,KAAK,CAACT,EAAG,EAAhC,CADb;AAEH;;AAED,WAASW,UAAT,CAAoBL,CAApB,EAAsB;AAClBP,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUG,MAAAA,IAAI,EAAEK,CAAC,CAACM,MAAF,CAASC;AAAzB,KAAD,CAAP;AACH;;AAED,WAASC,iBAAT,CAA2BR,CAA3B,EAA6B;AACzBP,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUI,MAAAA,WAAW,EAAEI,CAAC,CAACM,MAAF,CAASC;AAAhC,KAAD,CAAP;AACH;;AAED,sBACI;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,QAAD;AACE,MAAA,cAAc,EAAIR,gBADpB;AAEE,MAAA,IAAI,EAAIP,IAFV;AAGE,MAAA,UAAU,EAAIa,UAHhB;AAIE,MAAA,iBAAiB,EAAIG;AAJvB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBC;;GAtDQnB,Q;UACOL,U,EACGC,S;;;KAFVI,Q;AAwDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { readDeck, updateDeck } from \"../utils/api\";\n\nfunction EditDeck(){\nconst history = useHistory();\nconst { deckId } = useParams();\nconst [ deck, setDeck ] = useState({\n    id: 0,\n    name: \"\",\n    description: \"\"\n});\n\nuseEffect(() => {\n    async function loadDecks(){\n        const currentDeck = await readDeck(deckId);\n        setDeck(currentDeck);\n    }\n    loadDecks();\n}, [deckId])\n\nfunction handleSubmission(e){\n    e.preventDefault();\n    updateDeck(deck)\n.then((index) => history.push(`/decks/${index.id}`));\n}\n\nfunction updateName(e){\n    setDeck({...deck, name: e.target.value});\n}\n\nfunction updateDescription(e){\n    setDeck({...deck, description: e.target.value});\n}\n\nreturn (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h4>Edit Deck</h4>\n      <DeckForm\n        handleFunction = {handleSubmission}\n        deck = {deck}\n        updateName = {updateName}\n        updateDescription = {updateDescription}\n      />\n    </div>\n\n)\n\n}\n\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}